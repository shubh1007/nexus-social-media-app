from django.db import models
from django.contrib.auth import get_user_model
# generates unique id for each post
import uuid
# get datetime for post
from datetime import datetime

User = get_user_model()

# Create your models here.
class Profile(models.Model):
    # CASCADE deletes all the objects that were referenceing to this object
    # For Example: if the blog post is deleted then the comments, likes and other info are also deleted
    # This is the Foriegn Key being the primary key of User Table
    
    # SET id to AUTOGENERATED values
    id = models.AutoField(primary_key= True)
    user = models.ForeignKey(User, on_delete= models.CASCADE)   
    id_user = models.IntegerField()
    # Bio can be blank
    bio = models.TextField(max_length=100 ,blank= True)
    profile_img = models.ImageField(upload_to = "profile_img", default='default-profile-img.png')
    location = models.CharField(max_length= 100)

    def __str__(self) -> str:
        # Username will be the attribute of the user instance 
        # when we will print the profile, we will print its username.
        return self.user.username

class Post(models.Model):
    # id is the id for POST. This is a long random character unique value
    # default this is uuid4 
    id = models.UUIDField(primary_key=True, default= uuid.uuid4)
    # This will be the name not the object so we are taking the CharField
    user = models.CharField(max_length=100)
    image = models.ImageField(upload_to="post_images")
    # Textfield does not have max length
    caption = models.TextField()
    # Default value is the current time
    created_at = models.DateTimeField(default = datetime.now)
    # Initially number of likes is 0
    no_of_like = models.IntegerField(default= 0)

    def __str__(self) -> str:
        # prints user name when instance is printed
        return self.user

class LikePost(models.Model):
    """
    We will create an instance everytime the user likes the post. 
    We will need the post_id of the post which has been liked
    Also, we will need the user_id of the user that likes the post
    """
    id = models.AutoField(primary_key=True)
    post_id = models.CharField(max_length=500)
    username = models.CharField(max_length=100)
    def __str__(self) -> str:
        return self.username

class FollowersCount(models.Model):
    """
    Keeps track of the follower and the user_name
    For instance, Shubham follows Roshni
    Here follower will be Shubham
    User will be Roshni
    """
    id = models.AutoField(primary_key=True)
    follower = models.CharField(max_length= 100)
    user = models.CharField(max_length= 100)
    def __str__(self) -> str:
        return self.user



